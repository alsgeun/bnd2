// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId Int @id @default(autoincrement()) @map("userId")
  email String @unique @map("email")
  password String @map("password")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  userinfos UserInfos?
  resume    Resume[]
  @@map("Users")
}

model UserInfos {
  userinfoId Int @id @default(autoincrement()) @map("userinfoId")
  userId Int @unique @map("userId")
  name String @map("name")
  age Int @map("age")
  gender String @map("gender")
  character String? @map("character")
  profileImage String @map("profileImage")
  createdAt DateTime @default(now())  @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  users Users @relation(fields: [userId], references: [userId], onDelete: Cascade)
  @@map("UserInfos")
}

model Resume {
  resumeId  Int @id @default(autoincrement()) @map("resumId")
  userId Int  @map("userId")
  resumeTitle String  @map("resumeTitle")
  resumeStatus Status @default(APPLY) @map("resumeStatus")
  authorsName String  @unique @map("authorsName")
  profileImage  String @map("profileImage")
  selfIntroduce String  @map("selfIntroduce")
  name String @map("name")
  age Int @map("age")
  address String  @map("address")
  contact Int @map("contact")
  createdAt DateTime @default(now())  @map("createdAt")
  
  users Users @relation(fields : [userId], references: [userId], onDelete: Cascade)
  @@map("Resume")
}

enum Status {
  APPLY
  DROP
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}